{"version":3,"sources":["services/ContactService.js","components/Shared/FormElement.js","components/FilterForm.js","components/ContactForm.js","components/ContactsDisplay.js","components/Shared/Notification.js","App.js","index.js"],"names":["baseUrl","request","axios","get","console","log","then","response","data","newObject","post","id","put","delete","FormElement","props","onSubmit","submitAction","text","type","onChange","changeHandler","value","children","FilterForm","handleSearchChange","searchText","event","preventDefault","ContactForm","addContact","handleNameChange","newName","handleNumberChange","newNumber","add","style","display","width","ContactsDisplay","searchValue","contacts","removeContact","filtered","filter","contact","name","toLowerCase","includes","listStyleType","map","key","number","onClick","Notification","notification","className","classSelector","message","App","useState","setContacts","setNewName","setNewNumber","setSearchText","setNotification","useEffect","ContactService","initialContacts","showNotification","setTimeout","target","foundContact","find","window","confirm","returnedContact","catch","errоr","errorMessage","err","addedContact","error","contactToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aacadc94.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n/* const baseUrl = 'http://localhost:3001/api/persons' */\r\n\r\n//! käytetään jos backend lukee frontend-tiedostoa omasta kansiostaan:\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  console.log('from ContactService.js/getAll/1, request is :' , request);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject) \r\n  console.log('from ContactService.js/create/1, request is :' , request);\r\n  return request.then(response => response.data) \r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  console.log('from ContactService.js/update/1, request is :' , request);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  console.log('from ContactService.js/deleteContact/1, request is :' , request);\r\n  return request.then(response => response.data)\r\n}\r\n\r\n  export default { \r\n    getAll, \r\n    create, \r\n    update,\r\n    deleteContact\r\n  }","import React from 'react'\r\n\r\nconst FormElement = (props) => {\r\n  return  (\r\n    <form onSubmit={props.submitAction}>\r\n      <label>\r\n      {props.text}\r\n        <input\r\n          type='text'  \r\n          onChange={props.changeHandler}\r\n          value={props.value}\r\n        />\r\n      </label>\r\n      {props.children}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default FormElement ","import React from 'react'\r\n\r\nimport FormElement from './Shared/FormElement'\r\n\r\nconst FilterForm = ({handleSearchChange, searchText}) => {\r\n  return (\r\n    <FormElement\r\n      submitAction={event => event.preventDefault()}\r\n      text='filter shown with '\r\n      changeHandler={handleSearchChange}\r\n      value={searchText}\r\n    />\r\n  )\r\n}\r\n\r\nexport default FilterForm \r\n","import React from 'react'\r\n\r\nimport FormElement from './Shared/FormElement'\r\n\r\nconst ContactForm = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        Add a new contact\r\n      </h3>\r\n      <FormElement\r\n        submitAction={props.addContact}\r\n        text='Name '\r\n        changeHandler={props.handleNameChange}\r\n        value={props.newName}\r\n      >\r\n      </FormElement>\r\n      <FormElement\r\n        submitAction={props.addContact}\r\n        text='Number '\r\n        changeHandler={props.handleNumberChange}\r\n        value={props.newNumber}\r\n        add='Add'\r\n      >\r\n      <button style={{display: 'block', width: 110}} type='submit'>Add</button>\r\n      </FormElement>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContactForm \r\n","import React from 'react'\r\n\r\nconst ContactsDisplay = ({contacts, searchText, removeContact}) => {\r\n\r\n  const filterContacts = (array, searchValue) => {\r\n    return array.filter(contact => contact.name.toLowerCase().includes(searchValue.toLowerCase()))\r\n  }   \r\n  \r\n  const filtered = filterContacts(contacts, searchText);\r\n\r\n  return (\r\n    <>\r\n      <h3>Numbers</h3>\r\n      <ul style={{listStyleType: \"none\"}}>\r\n          {filtered.map(contact => \r\n          <div key={contact.id}>\r\n            <li>\r\n              {contact.name} {' '}\r\n              {contact.number} {' '}\r\n            <button onClick={() => removeContact(contact.id)}>delete</button>\r\n            </li>\r\n          </div>\r\n          )}\r\n      </ul>\r\n    </> \r\n  )\r\n}\r\n  \r\nexport default ContactsDisplay ","import React from 'react'\r\n\r\nimport '../Styles/Notification.css'\r\n\r\nconst Notification = ({ notification }) => {\r\n  \r\n   if (notification === null) {\r\n    return null\r\n  }   \r\n\r\n  return (\r\n    <div className={notification.classSelector}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification; ","import React, { useState, useEffect } from 'react'\r\n\r\nimport ContactService from './services/ContactService'\r\nimport FilterForm from './components/FilterForm'\r\nimport ContactForm from './components/ContactForm'\r\nimport ContactsDisplay from './components/ContactsDisplay'\r\nimport Notification from './components/Shared/Notification'\r\n\r\nconst App = () => {\r\n  const [ contacts, setContacts] = useState([]) \r\n  const [ newName, setNewName ] = useState('') \r\n  const [ newNumber, setNewNumber ] = useState('') \r\n  const [ searchText, setSearchText ] = useState('') \r\n  const [notification, setNotification] = useState(null)\r\n    \r\n  useEffect(() => {\r\n    console.log('from App.js/uEf/1, uEf Started');    \r\n    ContactService\r\n      .getAll()\r\n      .then(initialContacts => {\r\n        setContacts(initialContacts)\r\n      })\r\n      console.log('from App.js/uEf/1, uEf finished');\r\n  }, [])\r\n\r\n  const showNotification = (message, classSelector='success') => {\r\n    setNotification({ message, classSelector })\r\n    setTimeout(() => {\r\n      setNotification(null)\r\n    }, 5000)\r\n  }\r\n \r\n  const addContact = (event) => {\r\n    event.preventDefault()\r\n\r\n    const foundContact = contacts.find(contact => contact.name === newName)\r\n    if (foundContact) { \r\n      const acceptUpdating = window.confirm(`${foundContact.name} already in phonebook, replace the old number with new one?`)\r\n        if (acceptUpdating) {\r\n          ContactService\r\n            .update(foundContact.id, {\r\n              name: foundContact.name,\r\n              number: newNumber\r\n            }).then(returnedContact => {\r\n              console.log('from App.js/addContact() / update 2, returnedContact is :', returnedContact);\r\n              setContacts(contacts.map(contact => contact.id !== returnedContact.id ? contact : returnedContact))\r\n              showNotification(`Contact ${newName} in the phonebook was updated`)\r\n            }).catch(errоr => {  //! mongoosen validointierror, jos tulee kahden selaimen virhe, ohjelma kaatuu\r\n              const {err: errorMessage} = errоr.response.data\r\n              showNotification(`${errorMessage}`, 'error')\r\n            })\r\n        }\r\n\r\n    } else {\r\n      ContactService\r\n       .create({\r\n         name: newName,\r\n         number: newNumber\r\n       })\r\n       .then(addedContact => {\r\n         console.log('from App.js/addContact()/1, returnedContact is :', addedContact);\r\n         setContacts([...contacts, addedContact]) \r\n         console.log('from App.js/addContact()/2, contacts is now:', contacts)\r\n         showNotification(`Contact ${newName} was added to the phonebook`)\r\n      }).catch(error => { \r\n        const {err: errorMessage} = error.response.data\r\n        showNotification(`${errorMessage}`, 'error')\r\n      })\r\n    }\r\n    setNewName('');\r\n    setNewNumber('');  \r\n  }\r\n\r\n  const removeContact = (id) => {\r\n    console.log('from deleteContact() / 1, id is:', id);\r\n    const contactToDelete = contacts.find(contact => contact.id === id)\r\n    const acceptDeleting = window.confirm(`Delete ${contactToDelete.name}`)\r\n    if (acceptDeleting) {\r\n       ContactService.deleteContact(contactToDelete.id)\r\n        .then(() => {\r\n          setContacts(contacts.filter(contact => contact.id !== contactToDelete.id))\r\n          showNotification(`Contact ${contactToDelete.name} was deleted from the phonebook`)\r\n        }).catch(errоr => {\r\n          setContacts(contacts.filter(contact => contact.id !== contactToDelete.id))\r\n          showNotification(`Contact ${contactToDelete.name} was not found on the server`, 'error')\r\n        })\r\n      }  \r\n    }\r\n  \r\n  const handleNameChange = (event) => {\r\n      setNewName(event.target.value)        \r\n  }\r\n  const handleNumberChange = (event) => {\r\n      setNewNumber(event.target.value)        \r\n  }\r\n  const handleSearchChange = (event) => {\r\n    setSearchText(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification \r\n        notification={notification}\r\n        />\r\n      <FilterForm \r\n        handleSearchChange={handleSearchChange}\r\n        searchText={searchText}\r\n      />\r\n      <ContactForm \r\n        newName={newName} \r\n        newNumber={newNumber}\r\n        addContact={addContact}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n      /> \r\n      <ContactsDisplay \r\n        contacts={contacts} \r\n        searchText={searchText}\r\n        removeContact={removeContact}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App \r\n\r\n\r\n              //! kontakteihin muut kuin se jota yritettiin päivittää poistamisen jälkeen,\r\n              //! jolloin lista päivittyy vastaamaan palvelimen oikeaa tilaa\r\n              /* setContacts(contacts.filter(contact => contact.id !== foundContact.id))\r\n              showNotification(`Contact ${newName} was not found on the server`, 'error') */","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}